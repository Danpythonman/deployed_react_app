{"version":3,"sources":["logo.svg","components/HelloWorldClass.jsx","components/HelloWorldFunction.jsx","components/Tasks.jsx","components/WebcamCapture.jsx","App.js","reportWebVitals.js","index.js"],"names":["HelloWorldClass","React","Component","HelloWorldFunction","tasks","title","Tasks","map","task","WebcamCapture","webcamRef","useRef","useState","webcamOpen","setWebcamOpen","facingMode","videoConstraints","setVideoConstraints","imageSrcArray","setImageSrcArray","src","index","ref","audio","screenshotFormat","onClick","image","current","getScreenshot","App","className","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAAe,G,MAAA,IAA0B,kC,6CCQ1BA,E,4JALX,WACI,OAAQ,kD,GAFcC,IAAMC,WCSrBC,EAXY,WACvB,OACI,0SCAFC,EAAQ,CACV,CAAEC,MAAO,uDACT,CAAEA,MAAO,8EAWEC,EARD,WACV,OACI,8BACKF,EAAMG,KAAI,SAACC,GAAD,OAAU,6BAAKA,EAAKH,c,uCCyD5BI,EA1DO,WAElB,IAAMC,EAAYC,iBAAO,MAEzB,EAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEA,EAAgDF,mBAAS,CAGrDG,WAAY,SAHhB,mBAAOC,EAAP,KAAyBC,EAAzB,KAMA,EAA0CL,mBAAS,IAAnD,mBAAOM,EAAP,KAAsBC,EAAtB,KAgBA,OACI,qCAEQD,EAAcX,KAAI,SAACa,EAAKC,GAAN,OACd,qBAAiBD,IAAKA,GAAZC,MAIdR,EAEI,qCACI,cAAC,IAAD,CACIS,IAAKZ,EACLa,OAAO,EACPC,iBAAiB,aACjBR,iBAAkBA,IAEtB,wBAAQS,QAvBZ,WACZ,IAAMC,EAAQhB,EAAUiB,QAAQC,gBAEhCT,EAAiB,GAAD,mBAAKD,GAAL,CAAoBQ,MAoBpB,2BACA,wBAAQD,QAhCP,WACkB,QAA/BT,EAAiBD,WACjBE,EAAoB,2BAAKD,GAAN,IAAwBD,WAAY,iBAEvDE,EAAoB,2BAAKD,GAAN,IAAwBD,WAAY,WA4B3C,2BACA,wBAAQU,QAAS,WAAQX,GAAc,IAAvC,6BAIJ,wBAAQW,QAAS,WAAQX,GAAc,IAAvC,6BCvCLe,MAdf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKV,IAAKW,EAAMD,UAAU,WAAWE,IAAI,SACzC,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UCHOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1dd05acd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nclass HelloWorldClass extends React.Component {\r\n    render() {\r\n        return (<h1>Hello World!</h1>);\r\n    }\r\n}\r\n\r\nexport default HelloWorldClass;\r\n","const HelloWorldFunction = () => {\r\n    return (\r\n        <p>\r\n            This component was made with a function.\r\n            The \"Hello World!\" component was made with a class.\r\n            I was going to make one app with classes and another with functions,\r\n            but React took so long to install and initialize the project so I don't want to make another project.\r\n        </p>\r\n    );\r\n}\r\n\r\nexport default HelloWorldFunction;\r\n","import Task from \"./Task\";\r\n\r\nconst tasks = [\r\n    { title: \"This was originally a to-do list app to learn React\" },\r\n    { title: \"But now I'm using this to learn how to deploy a React app to GitHub pages\" }\r\n];\r\n\r\nconst Tasks = () => {\r\n    return (\r\n        <div>\r\n            {tasks.map((task) => <h3>{task.title}</h3>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tasks;\r\n","import { useState, useRef } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\n\r\n// const videoConstraints = {\r\n//     width: 500,\r\n//     height: 500,\r\n//     facingMode: \"user\"\r\n// };\r\n\r\nconst WebcamCapture = () => {\r\n\r\n    const webcamRef = useRef(null);\r\n\r\n    const [webcamOpen, setWebcamOpen] = useState(false);\r\n\r\n    const [videoConstraints, setVideoConstraints] = useState({\r\n        // width: 500,\r\n        // height: 500,\r\n        facingMode: \"user\"\r\n    });\r\n\r\n    const [imageSrcArray, setImageSrcArray] = useState([]);\r\n\r\n    const switchCamera = () => {\r\n        if (videoConstraints.facingMode == \"user\") {\r\n            setVideoConstraints({ ...videoConstraints, facingMode: \"environment\" })\r\n        } else {\r\n            setVideoConstraints({ ...videoConstraints, facingMode: \"user\" })\r\n        }\r\n    }\r\n\r\n    const capture = () => {\r\n        const image = webcamRef.current.getScreenshot();\r\n\r\n        setImageSrcArray([...imageSrcArray, image]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                imageSrcArray.map((src, index) => (\r\n                    <img key={index} src={src}/>\r\n                ))\r\n            }\r\n            {\r\n                webcamOpen\r\n                ? (\r\n                    <>\r\n                        <Webcam\r\n                            ref={webcamRef}\r\n                            audio={false}\r\n                            screenshotFormat=\"image/jpeg\"\r\n                            videoConstraints={videoConstraints}\r\n                        />\r\n                        <button onClick={capture}>Capture Photo</button>\r\n                        <button onClick={switchCamera}>Switch Camera</button>\r\n                        <button onClick={() => { setWebcamOpen(false) }}>Close Webcam</button>\r\n                    </>\r\n                )\r\n                : (\r\n                    <button onClick={() => { setWebcamOpen(true) }}>Open Webcam</button>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default WebcamCapture;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport HelloWorldClass from \"./components/HelloWorldClass\";\nimport HelloWorldFunction from \"./components/HelloWorldFunction\";\nimport Tasks from \"./components/Tasks\";\nimport WebcamCapture from \"./components/WebcamCapture\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <HelloWorldClass />\n        <HelloWorldFunction />\n        <Tasks />\n        <WebcamCapture />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}